/* * NombreDeProyecto * ========================================================
   Opacity Mixins | Etc [/etc/css/scss/mixinsOpacity.scss]
   ========================================================================== */

/* // Descripcion ----------------------------------------------------------- */
// Archivo de mixins.



/* // Referencias globales de nombres de variables y mixins ----------------- */
///-- Inicio del nombre
// bd                   = borde
// bg                   = fondo / background
// bx                   = box
// ft                   = fuente
// mq, MQ               = media query @media
// tx                   = texto

///-- Fin del nombre
// _before              = se usa con pseudo-elementos ::before
// _after               = se usa con pseudo-elementos ::after
// _act                 = activacion
// _ani                 = animacion
// _hover               = se usa con pseudo-clases :focus y :hover
// _hs                  = hash
// _imp			= importacion
// _mx                  = mixin
// _var                 = variables

///-- Espaciado
// P, M                 = padding, margin
// T, R, B, L           = top, right, bottom, left
// H, V, A, X           = horizontal, vertical, all, custom defined

///-- Tamanos de Pantalla
// T                    = tablet
// B, A, O, L           = before, after, only, landscape

///-- Colores
// X, L, D              = extra, light, dark
// De, S, B             = desaturated, semi, bright

///-- Fuentes
// T, L, M, R, B, BK    = thin, light, medium, regular, bold, black
// X, S, U, C, I        = extra, semi, ultra, condensed, italic



@mixin opacityCustom($opacityCustomMX_value){
    opacity: calc(#{$opacityCustomMX_value} / 100);
    filter: alpha(opacity=$opacityCustomMX_value);
    -ms-filter: "progid: DXImageTransform.Microsoft.Alpha(opacity=#{$opacityCustomMX_value})";
}
@mixin opacityCustomHover($opacityCustomHoverMX_value: 75, $opacityCustomHoverMX_valueHover: 100){
    opacity: calc(#{$opacityCustomHoverMX_value} / 100);
    filter: alpha(opacity=$opacityCustomHoverMX_value);
    -ms-filter: "progid: DXImageTransform.Microsoft.Alpha(opacity=#{$opacityCustomHoverMX_value})";
    &:focus, &:focus-visible, &:hover{
        opacity: calc(#{$opacityCustomHoverMX_valueHover} / 100);
        filter: alpha(opacity=$opacityCustomHoverMX_valueHover);
        -ms-filter: "progid: DXImageTransform.Microsoft.Alpha(opacity=#{$opacityCustomHoverMX_valueHover})";
    }
}