/* * NombreDeProyecto * ========================================================
   Useful Classes Responsive | Etc [/etc/css/scss/classes_useful_responsive.scss]
   ========================================================================== */

/* // Descripcion ----------------------------------------------------------- */
// Archivo de estilos scss.



/* // Referencias globales de nombres de variables y mixins ----------------- */
///-- Inicio del nombre
// bd                   = borde
// bg                   = fondo / background
// bx                   = box
// ft                   = fuente
// mq                   = media query @media
// tx                   = texto

///-- Fin del nombre
// _mx                  = mixin
// _act                 = activacion
// _ani                 = animacion
// _hs                  = hash
// _hover               = se usa con pseudoclases :focus y :hover
// _before              = se usa con pseudoelementos ::before
// _after               = se usa con pseudoelementos ::after

///-- Espaciado
// P, M                 = padding, margin
// T, R, B, L           = top, right, bottom, left
// H, V, A, X           = horizontal, vertical, all, custom defined

///-- Tamanos de Pantalla
// M, T, D              = mobile, tablet, desktop
// B, A, O, L, MQ       = before, after, only, landscape, mediaQuery

///-- Colores
// X, L, D              = extra, light, dark
// De, S, B             = desaturated, semi, bright

///-- Fuentes
// T, L, M, R, B, BK    = thin, light, medium, regular, bold, black
// X, S, U, C, I        = extra, semi, ultra, condensed, italic



/* // Mobile Only Classes --------------------------------------------------- */
@include beforeMQ500{
    @if $classes_position_display_mask_cursor_act_B500 == "on"{
/*___ Positioning _______________________*/
        .pRelMO{position: relative}
        .pAbsMO{position: absolute}
        .clearMO{clear: both}

/*___ Display ___________________________*/
        .displayBlockMO{display: $block}
        .displayInlineMO{display: $inline}
        .displayInlineBlockMO{display: $inlineBlock}
        .displayTableMO{display: table}
        .displayNoneMO{display: $none}
        .contentBoxMO{box-sizing: content-box}
        .borderBoxMO{box-sizing: border-box}
        .centerVerticallyMO{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenMO:not(:focus):not(:active),
        .sr-onlyMO:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_B500 == "on"{
/*___ Lists and floats __________________*/
        .unstyledMO, .horizontalMO{list-style: $none}
        .floatLeftMO, .horizontalMO li{float: $left}
        .floatRightMO{float: $right}
        .horizontalCenterMO{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneMO, .unstyledMO li{float: $none}
    }
    
    @if $classes_text_act_B500 == "on"{
/*___ Text ______________________________*/
        .txIndentedMO{text-indent: -9999px}
        .txAlignLeftMO{text-align: left}
        .txAlignRightMO{text-align: right}
        .txAlignCenterMO{text-align: center}
        .txAlignJustifyMO{text-align: justify}
        .txAlignJustifyCenterMO{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperMO{text-transform: uppercase}
        .txCaseLowerMO{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_B500 == "on"{
/*___ Backgrounds, border and images ____*/
        .banMO{border: $none}
        .bgNoneMO{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentMO{background-color: $transparent}
        .bgNoImageMO{background-image: $none}
    }
    
    @if $helpers_spacing_act_B500 == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorMO;    
        .mraMO,.mhaMO{margin-right: $auto}
        .mlaMO,.mhaMO{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_B500 == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexMO, .flexHorizontalMO, .flexColumnMO, .flexNoWrapMO, .flexJustifyEndMO, .flexJustifyCenterMO, .flexJustifyBetweenMO, .flexJustifyAroundMO, .flexAlignContentEndMO, .flexAlignContentCenterMO, .flexAlignContentBetweenMO, .flexAlignContentAroundMO, .flexAlignContentStretchMO, .flexAlignItemsEndMO, .flexAlignItemsCenterMO, .flexAlignItemsBaselineMO, .flexAlignItemsStretchMO, .horizontalCenterFlexMO{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnMO{flex-direction: column}
        .flexNoWrapMO{flex-wrap: nowrap}
        .flexJustifyEndMO{justify-content: flex-end}
        .flexJustifyCenterMO{justify-content: center}
        .flexJustifyBetweenMO{justify-content: space-between}
        .flexJustifyAroundMO{justify-content: space-around}
        .flexAlignContentEndMO{align-content: flex-end}
        .flexAlignContentCenterMO{align-content: center}
        .flexAlignContentBetweenMO{align-content: space-between}
        .flexAlignContentAroundMO{align-content: space-around}
        .flexAlignContentStretchMO{align-content: stretch}
        .flexAlignItemsEndMO{align-items: flex-end}
        .flexAlignItemsCenterMO{align-items: center}
        .flexAlignItemsBaselineMO{align-items: baseline}
        .flexAlignItemsStretchMO{align-items: stretch}
        .flexHorizontalMO{list-style: $none}
    }
}

/* // After Mobile Landscape Classes ---------------------------------------- */
@include afterMQ500{
    @if $classes_position_display_mask_cursor_act_A500 == "on"{
/*___ Positioning _______________________*/
        .pRelAML{position: relative}
        .pAbsAML{position: absolute}
        .clearAML{clear: both}

/*___ Display ___________________________*/
        .displayBlockAML{display: $block}
        .displayInlineAML{display: $inline}
        .displayInlineBlockAML{display: $inlineBlock}
        .displayTableAML{display: table}
        .displayNoneAML{display: $none}
        .contentBoxAML{box-sizing: content-box}
        .borderBoxAML{box-sizing: border-box}
        .centerVerticallyAML{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenAML:not(:focus):not(:active),
        .sr-onlyAML:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_A500 == "on"{
/*___ Lists and floats __________________*/
        .unstyledAML, .horizontalAML{list-style: $none}
        .floatLeftAML, .horizontalAML li{float: $left}
        .floatRightAML{float: $right}
        .horizontalCenterAML{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneAML, .unstyledAML li{float: $none}
    }
    
    @if $classes_text_act_A500 == "on"{
/*___ Text ______________________________*/
        .txIndentedAML{text-indent: -9999px}
        .txAlignLeftAML{text-align: left}
        .txAlignRightAML{text-align: right}
        .txAlignCenterAML{text-align: center}
        .txAlignJustifyAML{text-align: justify}
        .txAlignJustifyCenterAML{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperAML{text-transform: uppercase}
        .txCaseLowerAML{text-transform: lowercase}
    }
    
    @if $classes_bg_bd_NO_act_A500 == "on"{
/*___ Backgrounds, border and images ____*/
        .banAML{border: $none}
        .bgNoneAML{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentAML{background-color: $transparent}
        .bgNoImageAML{background-image: $none}
    }
    
    @if $helpers_spacing_act_A500 == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorAML;
        .mraAML,.mhaAML{margin-right: $auto}
        .mlaAML,.mhaAML{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_A500 == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexAML, .flexHorizontalAML, .flexColumnAML, .flexNoWrapAML, .flexJustifyEndAML, .flexJustifyCenterAML, .flexJustifyBetweenAML, .flexJustifyAroundAML, .flexAlignContentEndAML, .flexAlignContentCenterAML, .flexAlignContentBetweenAML, .flexAlignContentAroundAML, .flexAlignContentStretchAML, .flexAlignItemsEndAML, .flexAlignItemsCenterAML, .flexAlignItemsBaselineAML, .flexAlignItemsStretchAML, .horizontalCenterFlexAML{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnAML{flex-direction: column}
        .flexNoWrapAML{flex-wrap: nowrap}
        .flexJustifyEndAML{justify-content: flex-end}
        .flexJustifyCenterAML{justify-content: center}
        .flexJustifyBetweenAML{justify-content: space-between}
        .flexJustifyAroundAML{justify-content: space-around}
        .flexAlignContentEndAML{align-content: flex-end}
        .flexAlignContentCenterAML{align-content: center}
        .flexAlignContentBetweenAML{align-content: space-between}
        .flexAlignContentAroundAML{align-content: space-around}
        .flexAlignContentStretchAML{align-content: stretch}
        .flexAlignItemsEndAML{align-items: flex-end}
        .flexAlignItemsCenterAML{align-items: center}
        .flexAlignItemsBaselineAML{align-items: baseline}
        .flexAlignItemsStretchAML{align-items: stretch}
        .flexHorizontalAML{list-style: $none}
    }
}

/* // After Mobile 600 Classes ---------------------------------------------- */
@include afterMQ600{
    @if $classes_position_display_mask_cursor_act_A600 == "on"{
/*___ Positioning _______________________*/
        .pRelA600{position: relative}
        .pAbsA600{position: absolute}
        .clearA600{clear: both}

/*___ Display ___________________________*/
        .displayBlockA600{display: $block}
        .displayInlineA600{display: $inline}
        .displayInlineBlockA600{display: $inlineBlock}
        .displayTableA600{display: table}
        .displayNoneA600{display: $none}
        .contentBoxA600{box-sizing: content-box}
        .borderBoxA600{box-sizing: border-box}
        .centerVerticallyA600{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenA600:not(:focus):not(:active),
        .sr-onlyA600:not(:focus):not(:active){
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_A600 == "on"{
/*___ Lists and floats __________________*/
        .unstyledA600, .horizontalA600{list-style: $none}
        .floatLeftA600, .horizontalA600 li{float: $left}
        .floatRightA600{float: $right}
        .horizontalCenterA600{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneA600, .unstyledA600 li{float: $none}
    }
    
    @if $classes_text_act_A600 == "on"{
/*___ Text ______________________________*/
        .txIndentedA600{text-indent: -9999px}
        .txAlignLeftA600{text-align: left}
        .txAlignRightA600{text-align: right}
        .txAlignCenterA600{text-align: center}
        .txAlignJustifyA600{text-align: justify}
        .txAlignJustifyCenterA600{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperA600{text-transform: uppercase}
        .txCaseLowerA600{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_A600 == "on"{
/*___ Backgrounds, border and images ____*/
        .banA600{border: $none}
        .bgNoneA600{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentA600{background-color: $transparent}
        .bgNoImageA600{background-image: $none}
    }
    
    @if $helpers_spacing_act_A600 == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorA600;
        .mraA600,.mhaA600{margin-right: $auto}
        .mlaA600,.mhaA600{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_A600 == "on"{
/*___ Flexbox Classes ___________________*/ 
        .displayFlexA600, .flexHorizontalA600, .flexColumnA600, .flexNoWrapA600, .flexJustifyEndA600, .flexJustifyCenterA600, .flexJustifyBetweenA600, .flexJustifyAroundA600, .flexAlignContentEndA600, .flexAlignContentCenterA600, .flexAlignContentBetweenA600, .flexAlignContentAroundA600, .flexAlignContentStretchA600, .flexAlignItemsEndA600, .flexAlignItemsCenterA600, .flexAlignItemsBaselineA600, .flexAlignItemsStretchA600, .horizontalCenterFlexA600{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnA600{flex-direction: column}
        .flexNoWrapA600{flex-wrap: nowrap}
        .flexJustifyEndA600{justify-content: flex-end}
        .flexJustifyCenterA600{justify-content: center}
        .flexJustifyBetweenA600{justify-content: space-between}
        .flexJustifyAroundA600{justify-content: space-around}
        .flexAlignContentEndA600{align-content: flex-end}
        .flexAlignContentCenterA600{align-content: center}
        .flexAlignContentBetweenA600{align-content: space-between}
        .flexAlignContentAroundA600{align-content: space-around}
        .flexAlignContentStretchA600{align-content: stretch}
        .flexAlignItemsEndA600{align-items: flex-end}
        .flexAlignItemsCenterA600{align-items: center}
        .flexAlignItemsBaselineA600{align-items: baseline}
        .flexAlignItemsStretchA600{align-items: stretch}
        .flexHorizontalA600{list-style: $none}
    }
}

/* // Mobile Landscape Only Classes ----------------------------------------- */
@include MQ500Only{
    @if $classes_position_display_mask_cursor_act_500O == "on"{
/*___ Positioning _______________________*/
        .pRelMLO{position: relative}
        .pAbsMLO{position: absolute}
        .clearMLO{clear: both}

/*___ Display ___________________________*/
        .displayBlockMLO{display: $block}
        .displayInlineMLO{display: $inline}
        .displayInlineBlockMLO{display: $inlineBlock}
        .displayTableMLO{display: table}
        .displayNoneMLO{display: $none}
        .contentBoxMLO{box-sizing: content-box}
        .borderBoxMLO{box-sizing: border-box}
        .centerVerticallyMLO{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenMLO:not(:focus):not(:active),
        .sr-onlyMLO:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_500O == "on"{
/*___ Lists and floats __________________*/
        .unstyledMLO, .horizontalMLO{list-style: $none}
        .floatLeftMLO, .horizontalMLO li{float: $left}
        .floatRightMLO{float: $right}
        .horizontalCenterMLO{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneMLO, .unstyledMLO li{float: $none}
    }
    
    @if $classes_text_act_500O == "on"{
/*___ Text ______________________________*/
        .txIndentedMLO{text-indent: -9999px}
        .txAlignLeftMLO{text-align: left}
        .txAlignRightMLO{text-align: right}
        .txAlignCenterMLO{text-align: center}
        .txAlignJustifyMLO{text-align: justify}
        .txAlignJustifyCenterMLO{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperMLO{text-transform: uppercase}
        .txCaseLowerMLO{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_500O == "on"{
/*___ Backgrounds, border and images ____*/
        .banMLO{border: $none}
        .bgNoneMLO{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentMLO{background-color: $transparent}
        .bgNoImageMLO{background-image: $none}
    }
    
    @if $helpers_spacing_act_500O == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorMLO;
        .mraMLO,.mhaMLO{margin-right: $auto}
        .mlaMLO,.mhaMLO{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_500O == "on"{
/*___ Flexbox Classes ___________________*/ 
        .displayFlexMLO, .flexHorizontalMLO, .flexColumnMLO, .flexNoWrapMLO, .flexJustifyEndMLO, .flexJustifyCenterMLO, .flexJustifyBetweenMLO, .flexJustifyAroundMLO, .flexAlignContentEndMLO, .flexAlignContentCenterMLO, .flexAlignContentBetweenMLO, .flexAlignContentAroundMLO, .flexAlignContentStretchMLO, .flexAlignItemsEndMLO, .flexAlignItemsCenterMLO, .flexAlignItemsBaselineMLO, .flexAlignItemsStretchMLO, .horizontalCenterFlexMLO{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnMLO{flex-direction: column}
        .flexNoWrapMLO{flex-wrap: nowrap}
        .flexJustifyEndMLO{justify-content: flex-end}
        .flexJustifyCenterMLO{justify-content: center}
        .flexJustifyBetweenMLO{justify-content: space-between}
        .flexJustifyAroundMLO{justify-content: space-around}
        .flexAlignContentEndMLO{align-content: flex-end}
        .flexAlignContentCenterMLO{align-content: center}
        .flexAlignContentBetweenMLO{align-content: space-between}
        .flexAlignContentAroundMLO{align-content: space-around}
        .flexAlignContentStretchMLO{align-content: stretch}
        .flexAlignItemsEndMLO{align-items: flex-end}
        .flexAlignItemsCenterMLO{align-items: center}
        .flexAlignItemsBaselineMLO{align-items: baseline}
        .flexAlignItemsStretchMLO{align-items: stretch}
        .flexHorizontalMLO{list-style: $none}
    }
}

/* // Before Tablet Classes ------------------------------------------------- */
@include beforeTablet{
    @if $classes_position_display_mask_cursor_act_BT == "on"{
/*___ Positioning _______________________*/
        .pRelBT{position: relative}
        .pAbsBT{position: absolute}
        .clearBT{clear: both}

/*___ Display ___________________________*/
        .displayBlockBT{display: $block}
        .displayInlineBT{display: $inline}
        .displayInlineBlockBT{display: $inlineBlock}
        .displayTableBT{display: table}
        .displayNoneBT{display: $none}
        .contentBoxBT{box-sizing: content-box}
        .borderBoxBT{box-sizing: border-box}
        .centerVerticallyBT{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenBT:not(:focus):not(:active),
        .sr-onlyBT:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_BT == "on"{
/*___ Lists and floats __________________*/
        .unstyledBT, .horizontalBT{list-style: $none}
        .floatLeftBT, .horizontalBT li{float: $left}
        .floatRightBT{float: $right}
        .horizontalCenterBT{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneBT, .unstyledBT li{float: $none}
    }
    
    @if $classes_text_act_BT == "on"{
/*___ Text ______________________________*/
        .txIndentedBT{text-indent: -9999px}
        .txAlignLeftBT{text-align: left}
        .txAlignRightBT{text-align: right}
        .txAlignCenterBT{text-align: center}
        .txAlignJustifyBT{text-align: justify}
        .txAlignJustifyCenterBT{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperBT{text-transform: uppercase}
        .txCaseLowerBT{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_BT == "on"{
/*___ Backgrounds, border and images ____*/
        .banBT{border: $none}
        .bgNoneBT{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentBT{background-color: $transparent}
        .bgNoImageBT{background-image: $none}
    }
    
    @if $helpers_spacing_act_BT == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorBT;
        .mraBT,.mhaBT{margin-right: $auto}
        .mlaBT,.mhaBT{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_BT == "on"{
/*___ Flexbox Classes ___________________*/ 
        .displayFlexBT, .flexHorizontalBT, .flexColumnBT, .flexNoWrapBT, .flexJustifyEndBT, .flexJustifyCenterBT, .flexJustifyBetweenBT, .flexJustifyAroundBT, .flexAlignContentEndBT, .flexAlignContentCenterBT, .flexAlignContentBetweenBT, .flexAlignContentAroundBT, .flexAlignContentStretchBT, .flexAlignItemsEndBT, .flexAlignItemsCenterBT, .flexAlignItemsBaselineBT, .flexAlignItemsStretchBT, .horizontalCenterFlexBT{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnBT{flex-direction: column}
        .flexNoWrapBT{flex-wrap: nowrap}
        .flexJustifyEndBT{justify-content: flex-end}
        .flexJustifyCenterBT{justify-content: center}
        .flexJustifyBetweenBT{justify-content: space-between}
        .flexJustifyAroundBT{justify-content: space-around}
        .flexAlignContentEndBT{align-content: flex-end}
        .flexAlignContentCenterBT{align-content: center}
        .flexAlignContentBetweenBT{align-content: space-between}
        .flexAlignContentAroundBT{align-content: space-around}
        .flexAlignContentStretchBT{align-content: stretch}
        .flexAlignItemsEndBT{align-items: flex-end}
        .flexAlignItemsCenterBT{align-items: center}
        .flexAlignItemsBaselineBT{align-items: baseline}
        .flexAlignItemsStretchBT{align-items: stretch}
        .flexHorizontalBT{list-style: $none}
    }
}

/* // Before Tablet Landscape Classes --------------------------------------- */
@include beforeTabletLandscape{
    @if $classes_position_display_mask_cursor_act_BTL == "on"{
/*___ Positioning _______________________*/
        .pRelBTL{position: relative}
        .pAbsBTL{position: absolute}
        .clearBTL{clear: both}

/*___ Display ___________________________*/
        .displayBlockBTL{display: $block}
        .displayInlineBTL{display: $inline}
        .displayInlineBlockBTL{display: $inlineBlock}
        .displayTableBTL{display: table}
        .displayNoneBTL{display: $none}
        .contentBoxBTL{box-sizing: content-box}
        .borderBoxBTL{box-sizing: border-box}
        .centerVerticallyBTL{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenBTL:not(:focus):not(:active),
        .sr-onlyBTL:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_BTL == "on"{
/*___ Lists and floats __________________*/
        .unstyledBTL, .horizontalBTL{list-style: $none}
        .floatLeftBTL, .horizontalBTL li{float: $left}
        .floatRightBTL{float: $right}
        .horizontalCenterBTL{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneBTL, .unstyledBTL li{float: $none}
    }
    
    @if $classes_text_act_BTL == "on"{
/*___ Text ______________________________*/
        .txIndentedBTL{text-indent: -9999px}
        .txAlignLeftBTL{text-align: left}
        .txAlignRightBTL{text-align: right}
        .txAlignCenterBTL{text-align: center}
        .txAlignJustifyBTL{text-align: justify}
        .txAlignJustifyCenterBTL{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperBTL{text-transform: uppercase}
        .txCaseLowerBTL{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_BTL == "on"{
/*___ Backgrounds, border and images ____*/
        .banBTL{border: $none}
        .bgNoneBTL{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentBTL{background-color: $transparent}
        .bgNoImageBTL{background-image: $none}
    }
    
    @if $helpers_spacing_act_BTL == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorBTL;
        .mraBTL,.mhaBTL{margin-right: $auto}
        .mlaBTL,.mhaBTL{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_BTL == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexBTL, .flexHorizontalBTL, .flexColumnBTL, .flexNoWrapBTL, .flexJustifyEndBTL, .flexJustifyCenterBTL, .flexJustifyBetweenBTL, .flexJustifyAroundBTL, .flexAlignContentEndBTL, .flexAlignContentCenterBTL, .flexAlignContentBetweenBTL, .flexAlignContentAroundBTL, .flexAlignContentStretchBTL, .flexAlignItemsEndBTL, .flexAlignItemsCenterBTL, .flexAlignItemsBaselineBTL, .flexAlignItemsStretchBTL, .horizontalCenterFlexBTL{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnBTL{flex-direction: column}
        .flexNoWrapBTL{flex-wrap: nowrap}
        .flexJustifyEndBTL{justify-content: flex-end}
        .flexJustifyCenterBTL{justify-content: center}
        .flexJustifyBetweenBTL{justify-content: space-between}
        .flexJustifyAroundBTL{justify-content: space-around}
        .flexAlignContentEndBTL{align-content: flex-end}
        .flexAlignContentCenterBTL{align-content: center}
        .flexAlignContentBetweenBTL{align-content: space-between}
        .flexAlignContentAroundBTL{align-content: space-around}
        .flexAlignContentStretchBTL{align-content: stretch}
        .flexAlignItemsEndBTL{align-items: flex-end}
        .flexAlignItemsCenterBTL{align-items: center}
        .flexAlignItemsBaselineBTL{align-items: baseline}
        .flexAlignItemsStretchBTL{align-items: stretch}
        .flexHorizontalBTL{list-style: $none}
    }
}

/* // Tablet Only Classes --------------------------------------------------- */
@include tabletOnly{
    @if $classes_position_display_mask_cursor_act_TO == "on"{
/*___ Positioning _______________________*/
        .pRelTO{position: relative}
        .pAbsTO{position: absolute}
        .clearTO{clear: both}

/*___ Display ___________________________*/
        .displayBlockTO{display: $block}
        .displayInlineTO{display: $inline}
        .displayInlineBlockTO{display: $inlineBlock}
        .displayTableTO{display: table}
        .displayNoneTO{display: $none}
        .contentBoxTO{box-sizing: content-box}
        .borderBoxTO{box-sizing: border-box}
        .centerVerticallyTO{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenTO:not(:focus):not(:active),
        .sr-onlyTO:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_TO == "on"{
/*___ Lists and floats __________________*/
        .unstyledTO, .horizontalTO{list-style: $none}
        .floatLeftTO, .horizontalTO li{float: $left}
        .floatRightTO{float: $right}
        .horizontalCenterTO{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneTO, .unstyledTO li{float: $none}
    }
    
    @if $classes_text_act_TO == "on"{
/*___ Text ______________________________*/
        .txIndentedTO{text-indent: -9999px}
        .txAlignLeftTO{text-align: left}
        .txAlignRightTO{text-align: right}
        .txAlignCenterTO{text-align: center}
        .txAlignJustifyTO{text-align: justify}
        .txAlignJustifyCenterTO{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperTO{text-transform: uppercase}
        .txCaseLowerTO{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_TO == "on"{
/*___ Backgrounds, border and images ____*/
        .banTO{border: $none}
        .bgNoneTO{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentTO{background-color: $transparent}
        .bgNoImageTO{background-image: $none}
    }
    
    @if $helpers_spacing_act_TO == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorTO;
        .mraTO,.mhaTO{margin-right: $auto}
        .mlaTO,.mhaTO{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_TO == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexTO, .flexHorizontalTO, .flexColumnTO, .flexNoWrapTO, .flexJustifyEndTO, .flexJustifyCenterTO, .flexJustifyBetweenTO, .flexJustifyAroundTO, .flexAlignContentEndTO, .flexAlignContentCenterTO, .flexAlignContentBetweenTO, .flexAlignContentAroundTO, .flexAlignContentStretchTO, .flexAlignItemsEndTO, .flexAlignItemsCenterTO, .flexAlignItemsBaselineTO, .flexAlignItemsStretchTO, .horizontalCenterFlexTO{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnTO{flex-direction: column}
        .flexNoWrapTO{flex-wrap: nowrap}
        .flexJustifyEndTO{justify-content: flex-end}
        .flexJustifyCenterTO{justify-content: center}
        .flexJustifyBetweenTO{justify-content: space-between}
        .flexJustifyAroundTO{justify-content: space-around}
        .flexAlignContentEndTO{align-content: flex-end}
        .flexAlignContentCenterTO{align-content: center}
        .flexAlignContentBetweenTO{align-content: space-between}
        .flexAlignContentAroundTO{align-content: space-around}
        .flexAlignContentStretchTO{align-content: stretch}
        .flexAlignItemsEndTO{align-items: flex-end}
        .flexAlignItemsCenterTO{align-items: center}
        .flexAlignItemsBaselineTO{align-items: baseline}
        .flexAlignItemsStretchTO{align-items: stretch}
        .flexHorizontalTO{list-style: $none}
    }
}

/* // After Tablet Classes -------------------------------------------------- */
@include afterTablet{
    @if $classes_position_display_mask_cursor_act_AT == "on"{
/*___ Positioning _______________________*/
        .pRelAT{position: relative}
        .pAbsAT{position: absolute}
        .clearAT{clear: both}

/*___ Display ___________________________*/
        .displayBlockAT{display: $block}
        .displayInlineAT{display: $inline}
        .displayInlineBlockAT{display: $inlineBlock}
        .displayTableAT{display: table}
        .displayNoneAT{display: $none}
        .contentBoxAT{box-sizing: content-box}
        .borderBoxAT{box-sizing: border-box}
        .centerVerticallyAT{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenAT:not(:focus):not(:active),
        .sr-onlyAT:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_AT == "on"{
/*___ Lists and floats __________________*/
        .unstyledAT, .horizontalAT{list-style: $none}
        .floatLeftAT, .horizontalAT li{float: $left}
        .floatRightAT{float: $right}
        .horizontalCenterAT{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneAT, .unstyledAT li{float: $none}
    }
    
    @if $classes_text_act_AT == "on"{
/*___ Text ______________________________*/ 
        .txIndentedAT{text-indent: -9999px}
        .txAlignLeftAT{text-align: left}
        .txAlignRightAT{text-align: right}
        .txAlignCenterAT{text-align: center}
        .txAlignJustifyAT{text-align: justify}
        .txAlignJustifyCenterAT{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperAT{text-transform: uppercase}
        .txCaseLowerAT{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_AT == "on"{
/*___ Backgrounds, border and images ____*/
        .banAT{border: $none}
        .bgNoneAT{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentAT{background-color: $transparent}
        .bgNoImageAT{background-image: $none}
    }
    
    @if $helpers_spacing_act_AT == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorAT;
        .mraAT,.mhaAT{margin-right: $auto}
        .mlaAT,.mhaAT{margin-left: $auto}
    }
     
    @if $classes_flexbox_act_AT == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexAT, .flexHorizontalAT, .flexColumnAT, .flexNoWrapAT, .flexJustifyEndAT, .flexJustifyCenterAT, .flexJustifyBetweenAT, .flexJustifyAroundAT, .flexAlignContentEndAT, .flexAlignContentCenterAT, .flexAlignContentBetweenAT, .flexAlignContentAroundAT, .flexAlignContentStretchAT, .flexAlignItemsEndAT, .flexAlignItemsCenterAT, .flexAlignItemsBaselineAT, .flexAlignItemsStretchAT, .horizontalCenterFlexAT{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnAT{flex-direction: column}
        .flexNoWrapAT{flex-wrap: nowrap}
        .flexJustifyEndAT{justify-content: flex-end}
        .flexJustifyCenterAT{justify-content: center}
        .flexJustifyBetweenAT{justify-content: space-between}
        .flexJustifyAroundAT{justify-content: space-around}
        .flexAlignContentEndAT{align-content: flex-end}
        .flexAlignContentCenterAT{align-content: center}
        .flexAlignContentBetweenAT{align-content: space-between}
        .flexAlignContentAroundAT{align-content: space-around}
        .flexAlignContentStretchAT{align-content: stretch}
        .flexAlignItemsEndAT{align-items: flex-end}
        .flexAlignItemsCenterAT{align-items: center}
        .flexAlignItemsBaselineAT{align-items: baseline}
        .flexAlignItemsStretchAT{align-items: stretch}
        .flexHorizontalAT{list-style: $none}
    }
}

/* // After Tablet Landscape Classes ---------------------------------------- */
@include afterTabletLandscape{
    @if $classes_position_display_mask_cursor_act_ATL == "on"{
/*___ Positioning _______________________*/
        .pRelATL{position: relative}
        .pAbsATL{position: absolute}
        .clearATL{clear: both}

/*___ Display ___________________________*/
        .displayBlockATL{display: $block}
        .displayInlineATL{display: $inline}
        .displayInlineBlockATL{display: $inlineBlock}
        .displayTableATL{display: table}
        .displayNoneATL{display: $none}
        .contentBoxATL{box-sizing: content-box}
        .borderBoxATL{box-sizing: border-box}
        .centerVerticallyATL{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenATL:not(:focus):not(:active),
        .sr-onlyATL:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_ATL == "on"{
/*___ Lists and floats __________________*/
        .unstyledATL, .horizontalATL{list-style: $none}
        .floatLeftATL, .horizontalATL li{float: $left}
        .floatRightATL{float: $right}
        .horizontalCenterATL{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneATL, .unstyledATL li{float: $none}
    }
    
    @if $classes_text_act_ATL == "on"{
/*___ Text ______________________________*/ 
        .txIndentedATL{text-indent: -9999px}
        .txAlignLeftATL{text-align: left}
        .txAlignRightATL{text-align: right}
        .txAlignCenterATL{text-align: center}
        .txAlignJustifyATL{text-align: justify}
        .txAlignJustifyCenterATL{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperATL{text-transform: uppercase}
        .txCaseLowerATL{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_ATL == "on"{
/*___ Backgrounds, border and images ____*/
        .banATL{border: $none}
        .bgNoneATL{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentATL{background-color: $transparent}
        .bgNoImageATL{background-image: $none}
    }
    
    @if $helpers_spacing_act_ATL == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorATL;
        .mraATL,.mhaATL{margin-right: $auto}
        .mlaATL,.mhaATL{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_ATL == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexATL, .flexHorizontalATL, .flexColumnATL, .flexNoWrapATL, .flexJustifyEndATL, .flexJustifyCenterATL, .flexJustifyBetweenATL, .flexJustifyAroundATL, .flexAlignContentEndATL, .flexAlignContentCenterATL, .flexAlignContentBetweenATL, .flexAlignContentAroundATL, .flexAlignContentStretchATL, .flexAlignItemsEndATL, .flexAlignItemsCenterATL, .flexAlignItemsBaselineATL, .flexAlignItemsStretchATL, .horizontalCenterFlexATL{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnATL{flex-direction: column}
        .flexNoWrapATL{flex-wrap: nowrap}
        .flexJustifyEndATL{justify-content: flex-end}
        .flexJustifyCenterATL{justify-content: center}
        .flexJustifyBetweenATL{justify-content: space-between}
        .flexJustifyAroundATL{justify-content: space-around}
        .flexAlignContentEndATL{align-content: flex-end}
        .flexAlignContentCenterATL{align-content: center}
        .flexAlignContentBetweenATL{align-content: space-between}
        .flexAlignContentAroundATL{align-content: space-around}
        .flexAlignContentStretchATL{align-content: stretch}
        .flexAlignItemsEndATL{align-items: flex-end}
        .flexAlignItemsCenterATL{align-items: center}
        .flexAlignItemsBaselineATL{align-items: baseline}
        .flexAlignItemsStretchATL{align-items: stretch}
        .flexHorizontalATL{list-style: $none}
    }
}

/* // Tablet Landscape Only Classes ----------------------------------------- */
@include tabletLandscapeOnly{
    @if $classes_position_display_mask_cursor_act_TLO == "on"{
/*___ Positioning _______________________*/
        .pRelTLO{position: relative}
        .pAbsTLO{position: absolute}
        .clearTLO{clear: both}

/*___ Display ___________________________*/
        .displayBlockTLO{display: $block}
        .displayInlineTLO{display: $inline}
        .displayInlineBlockTLO{display: $inlineBlock}
        .displayTableTLO{display: table}
        .displayNoneTLO{display: $none}
        .contentBoxTLO{box-sizing: content-box}
        .borderBoxTLO{box-sizing: border-box}
        .centerVerticallyTLO{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenTLO:not(:focus):not(:active),
        .sr-onlyTLO:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_TLO == "on"{
/*___ Lists and floats __________________*/
        .unstyledTLO, .horizontalTLO{list-style: $none}
        .floatLeftTLO, .horizontalTLO li{float: $left}
        .floatRightTLO{float: $right}
        .horizontalCenterTLO{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneTLO, .unstyledTLO li{float: $none}
    }
    
    @if $classes_text_act_TLO == "on"{
/*___ Text ______________________________*/
        .txIndentedTLO{text-indent: -9999px}
        .txAlignLeftTLO{text-align: left}
        .txAlignRightTLO{text-align: right}
        .txAlignCenterTLO{text-align: center}
        .txAlignJustifyTLO{text-align: justify}
        .txAlignJustifyCenterTLO{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperTLO{text-transform: uppercase}
        .txCaseLowerTLO{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_TLO == "on"{
/*___ Backgrounds, border and images ____*/
        .banTLO{border: $none}
        .bgNoneTLO{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentTLO{background-color: $transparent}
        .bgNoImageTLO{background-image: $none}
    }
    
    @if $helpers_spacing_act_TLO == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorTLO;
        .mraTLO,.mhaTLO{margin-right: $auto}
        .mlaTLO,.mhaTLO{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_TLO == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexTLO, .flexHorizontalTLO, .flexColumnTLO, .flexNoWrapTLO, .flexJustifyEndTLO, .flexJustifyCenterTLO, .flexJustifyBetweenTLO, .flexJustifyAroundTLO, .flexAlignContentEndTLO, .flexAlignContentCenterTLO, .flexAlignContentBetweenTLO, .flexAlignContentAroundTLO, .flexAlignContentStretchTLO, .flexAlignItemsEndTLO, .flexAlignItemsCenterTLO, .flexAlignItemsBaselineTLO, .flexAlignItemsStretchTLO, .horizontalCenterFlexTLO{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnTLO{flex-direction: column}
        .flexNoWrapTLO{flex-wrap: nowrap}
        .flexJustifyEndTLO{justify-content: flex-end}
        .flexJustifyCenterTLO{justify-content: center}
        .flexJustifyBetweenTLO{justify-content: space-between}
        .flexJustifyAroundTLO{justify-content: space-around}
        .flexAlignContentEndTLO{align-content: flex-end}
        .flexAlignContentCenterTLO{align-content: center}
        .flexAlignContentBetweenTLO{align-content: space-between}
        .flexAlignContentAroundTLO{align-content: space-around}
        .flexAlignContentStretchTLO{align-content: stretch}
        .flexAlignItemsEndTLO{align-items: flex-end}
        .flexAlignItemsCenterTLO{align-items: center}
        .flexAlignItemsBaselineTLO{align-items: baseline}
        .flexAlignItemsStretchTLO{align-items: stretch}
        .flexHorizontalTLO{list-style: $none}
    }
}

/* // Tablet And Tablet Landscape Only Classes ------------------------------ */
@include tabletAndTabletLandscapeOnly{
    @if $classes_position_display_mask_cursor_act_TTLO == "on"{
/*___ Positioning _______________________*/
        .pRelTTLO{position: relative}
        .pAbsTTLO{position: absolute}
        .clearTTLO{clear: both}

/*___ Display ___________________________*/
        .displayBlockTTLO{display: $block}
        .displayInlineTTLO{display: $inline}
        .displayInlineBlockTTLO{display: $inlineBlock}
        .displayTableTTLO{display: table}
        .displayNoneTTLO{display: $none}
        .contentBoxTTLO{box-sizing: content-box}
        .borderBoxTTLO{box-sizing: border-box}
        .centerVerticallyTTLO{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenTTLO:not(:focus):not(:active),
        .sr-onlyTTLO:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_TTLO == "on"{
/*___ Lists and floats __________________*/
        .unstyledTTLO, .horizontalTTLO{list-style: $none}
        .floatLeftTTLO, .horizontalTTLO li{float: $left}
        .floatRightTTLO{float: $right}
        .horizontalCenterTTLO{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneTTLO, .unstyledTTLO li{float: $none}
    }
    
    @if $classes_text_act_TTLO == "on"{
/*___ Text ______________________________*/
        .txIndentedTTLO{text-indent: -9999px}
        .txAlignLeftTTLO{text-align: left}
        .txAlignRightTTLO{text-align: right}
        .txAlignCenterTTLO{text-align: center}
        .txAlignJustifyTTLO{text-align: justify}
        .txAlignJustifyCenterTTLO{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperTTLO{text-transform: uppercase}
        .txCaseLowerTTLO{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_TTLO == "on"{
/*___ Backgrounds, border and images ____*/
        .banTTLO{border: $none}
        .bgNoneTTLO{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentTTLO{background-color: $transparent}
        .bgNoImageTTLO{background-image: $none}
    }
    
    @if $helpers_spacing_act_TTLO == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorTTLO;
        .mraTTLO,.mhaTTLO{margin-right: $auto}
        .mlaTTLO,.mhaTTLO{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_TTLO == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexTTLO, .flexHorizontalTTLO, .flexColumnTTLO, .flexNoWrapTTLO, .flexJustifyEndTTLO, .flexJustifyCenterTTLO, .flexJustifyBetweenTTLO, .flexJustifyAroundTTLO, .flexAlignContentEndTTLO, .flexAlignContentCenterTTLO, .flexAlignContentBetweenTTLO, .flexAlignContentAroundTTLO, .flexAlignContentStretchTTLO, .flexAlignItemsEndTTLO, .flexAlignItemsCenterTTLO, .flexAlignItemsBaselineTTLO, .flexAlignItemsStretchTTLO, .horizontalCenterFlexTTLO{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnTTLO{flex-direction: column}
        .flexNoWrapTTLO{flex-wrap: nowrap}
        .flexJustifyEndTTLO{justify-content: flex-end}
        .flexJustifyCenterTTLO{justify-content: center}
        .flexJustifyBetweenTTLO{justify-content: space-between}
        .flexJustifyAroundTTLO{justify-content: space-around}
        .flexAlignContentEndTTLO{align-content: flex-end}
        .flexAlignContentCenterTTLO{align-content: center}
        .flexAlignContentBetweenTTLO{align-content: space-between}
        .flexAlignContentAroundTTLO{align-content: space-around}
        .flexAlignContentStretchTTLO{align-content: stretch}
        .flexAlignItemsEndTTLO{align-items: flex-end}
        .flexAlignItemsCenterTTLO{align-items: center}
        .flexAlignItemsBaselineTTLO{align-items: baseline}
        .flexAlignItemsStretchTTLO{align-items: stretch}
        .flexHorizontalTTLO{list-style: $none}
    }
}

/* // Before Desktop Classes ------------------------------------------------ */
@include beforeMQ1200{
    @if $classes_position_display_mask_cursor_act_BD == "on"{
/*___ Positioning _______________________*/
        .pRelBD{position: relative}
        .pAbsBD{position: absolute}
        .clearBD{clear: both}

/*___ Display ___________________________*/
        .displayBlockBD{display: $block}
        .displayInlineBD{display: $inline}
        .displayInlineBlockBD{display: $inlineBlock}
        .displayTableBD{display: table}
        .displayNoneBD{display: $none}
        .contentBoxBD{box-sizing: content-box}
        .borderBoxBD{box-sizing: border-box}
        .centerVerticallyBD{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenBD:not(:focus):not(:active),
        .sr-onlyBD:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_BD == "on"{
/*___ Lists and floats __________________*/
        .unstyledBD, .horizontalBD{list-style: $none}
        .floatLeftBD, .horizontalBD li{float: $left}
        .floatRightBD{float: $right}
        .horizontalCenterBD{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneBD, .unstyledBD li{float: $none}
    }
    
    @if $classes_text_act_BD == "on"{
/*___ Text ______________________________*/
        .txIndentedBD{text-indent: -9999px}
        .txAlignLeftBD{text-align: left}
        .txAlignRightBD{text-align: right}
        .txAlignCenterBD{text-align: center}
        .txAlignJustifyBD{text-align: justify}
        .txAlignJustifyCenterBD{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperBD{text-transform: uppercase}
        .txCaseLowerBD{text-transform: lowercase}
    }
    
    @if $classes_bg_bd_NO_act_BD == "on"{
/*___ Backgrounds, border and images ____*/
        .banBD{border: $none}
        .bgNoneBD{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentBD{background-color: $transparent}
        .bgNoImageBD{background-image: $none}
    }
    
    @if $helpers_spacing_act_BD == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorBD;
        .mraBD,.mhaBD{margin-right: $auto}
        .mlaBD,.mhaBD{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_BD == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexBD, .flexHorizontalBD, .flexColumnBD, .flexNoWrapBD, .flexJustifyEndBD, .flexJustifyCenterBD, .flexJustifyBetweenBD, .flexJustifyAroundBD, .flexAlignContentEndBD, .flexAlignContentCenterBD, .flexAlignContentBetweenBD, .flexAlignContentAroundBD, .flexAlignContentStretchBD, .flexAlignItemsEndBD, .flexAlignItemsCenterBD, .flexAlignItemsBaselineBD, .flexAlignItemsStretchBD, .horizontalCenterFlexBD{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnBD{flex-direction: column}
        .flexNoWrapBD{flex-wrap: nowrap}
        .flexJustifyEndBD{justify-content: flex-end}
        .flexJustifyCenterBD{justify-content: center}
        .flexJustifyBetweenBD{justify-content: space-between}
        .flexJustifyAroundBD{justify-content: space-around}
        .flexAlignContentEndBD{align-content: flex-end}
        .flexAlignContentCenterBD{align-content: center}
        .flexAlignContentBetweenBD{align-content: space-between}
        .flexAlignContentAroundBD{align-content: space-around}
        .flexAlignContentStretchBD{align-content: stretch}
        .flexAlignItemsEndBD{align-items: flex-end}
        .flexAlignItemsCenterBD{align-items: center}
        .flexAlignItemsBaselineBD{align-items: baseline}
        .flexAlignItemsStretchBD{align-items: stretch}
        .flexHorizontalBD{list-style: $none}
    }
}

/* // After Desktop Classes ------------------------------------------------- */
@include afterMQ1200{
    @if $classes_position_display_mask_cursor_act_AD == "on"{
/*___ Positioning _______________________*/
        .pRelAD{position: relative}
        .pAbsAD{position: absolute}
        .clearAD{clear: both}

/*___ Display ___________________________*/
        .displayBlockAD{display: $block}
        .displayInlineAD{display: $inline}
        .displayInlineBlockAD{display: $inlineBlock}
        .displayTableAD{display: table}
        .displayNoneAD{display: $none}
        .contentBoxAD{box-sizing: content-box}
        .borderBoxAD{box-sizing: border-box}
        .centerVerticallyAD{
            display: table-cell;
            vertical-align: middle;
        }
        .visuallyHiddenAD:not(:focus):not(:active),
        .sr-onlyAD:not(:focus):not(:active){
            // REF [22]
            position: absolute;
            clip-path: inset(100%);
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            border: $zero;
            padding: $zero;
            margin: -1px;
            overflow: hidden;
            white-space: nowrap;
        }
    }
    
    @if $classes_lists_floats_act_AD == "on"{
/*___ Lists and floats __________________*/
        .unstyledAD, .horizontalAD{list-style: $none}
        .floatLeftAD, .horizontalAD li{float: $left}
        .floatRightAD{float: $right}
        .horizontalCenterAD{
            margin-right: $auto;
            margin-left: $auto;    
            list-style: none;
            text-align: center;
            li{
                display: inline-block!important;
                > *{
                    display: inline-block!important;         
                }
            }
        }
        .floatNoneAD, .unstyledAD li{float: $none}
    }
    
    @if $classes_text_act_AD == "on"{
/*___ Text ______________________________*/
        .txIndentedAD{text-indent: -9999px}
        .txAlignLeftAD{text-align: left}
        .txAlignRightAD{text-align: right}
        .txAlignCenterAD{text-align: center}
        .txAlignJustifyAD{text-align: justify}
        .txAlignJustifyCenterAD{
            text-align: justify;
            text-align-last: center;
        }
        .txCaseUpperAD{text-transform: uppercase}
        .txCaseLowerAD{text-transform: lowercase}
    }
        
    @if $classes_bg_bd_NO_act_AD == "on"{
/*___ Backgrounds, border and images ____*/
        .banAD{border: $none}
        .bgNoneAD{
            &, &:focus, &:hover{
                background: $none;
            }
        }
        .bgTransparentAD{background-color: $transparent}
        .bgNoImageAD{background-image: $none}
    }
    
    @if $helpers_spacing_act_AD == "on"{
/*___ Spacing Helpers ___________________*/
        @include spacingHelpersClassesGeneratorAD;
        .mraAD,.mhaAD{margin-right: $auto}
        .mlaAD,.mhaAD{margin-left: $auto}
    }
    
    @if $classes_flexbox_act_AD == "on"{
/*___ Flexbox Classes ___________________*/
        .displayFlexAD, .flexHorizontalAD, .flexColumnAD, .flexNoWrapAD, .flexJustifyEndAD, .flexJustifyCenterAD, .flexJustifyBetweenAD, .flexJustifyAroundAD, .flexAlignContentEndAD, .flexAlignContentCenterAD, .flexAlignContentBetweenAD, .flexAlignContentAroundAD, .flexAlignContentStretchAD, .flexAlignItemsEndAD, .flexAlignItemsCenterAD, .flexAlignItemsBaselineAD, .flexAlignItemsStretchAD, .horizontalCenterFlexAD{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .flexColumnAD{flex-direction: column}
        .flexNoWrapAD{flex-wrap: nowrap}
        .flexJustifyEndAD{justify-content: flex-end}
        .flexJustifyCenterAD{justify-content: center}
        .flexJustifyBetweenAD{justify-content: space-between}
        .flexJustifyAroundAD{justify-content: space-around}
        .flexAlignContentEndAD{align-content: flex-end}
        .flexAlignContentCenterAD{align-content: center}
        .flexAlignContentBetweenAD{align-content: space-between}
        .flexAlignContentAroundAD{align-content: space-around}
        .flexAlignContentStretchAD{align-content: stretch}
        .flexAlignItemsEndAD{align-items: flex-end}
        .flexAlignItemsCenterAD{align-items: center}
        .flexAlignItemsBaselineAD{align-items: baseline}
        .flexAlignItemsStretchAD{align-items: stretch}
        .flexHorizontalAD{list-style: $none}
    }
}