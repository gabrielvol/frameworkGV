/* * NombreDeProyecto * ========================================================
   Colour Mixins | Etc [/etc/css/scss/mixins_colours.scss]
   ========================================================================== */

/* // Descripcion ----------------------------------------------------------- */
// Este archivo contiene los mixins para generar clases y selectores de colores.
// Los mapas que se encuentran en `[/etc/css/custom/var/colours_main_var.scss]`.
//
// Listado de mixins:
//
// 01 _ colourLightClassesGenerator
// 02 _ colourDarkClassesGenerator
// 03 _ anchorColoursLightClassesGenerator
// 04 _ anchorColoursDarkClassesGenerator
// 05 _ backgroundColourClassesGenerator
// 06 _ backgroundColourHoverClassesGenerator
//
// Los mixins 1 a 5 se utilizan en `[/scss/settings_text.scss]`
// Los mixins 6 y 7 se utilizan en `[/etc/css/custom/includes_backgrounds.scss]`
//
//
// 01 _ colourLightClassesGenerator
// 02 _ colourDarkClassesGenerator
// Por cada color genera una clase
// y los selectores para los elementos `b`, `strong`, `i` y `em`.
//
// Ej. con color verdeAgua:
// .verdeAgua,
// .verdeAgua b,
// .verdeAgua strong,
// .verdeAgua i,
// .verdeAgua em { color: #hex; }
//
// Además genera selectores para un ancla con la clase,
// sus pseudo-clases `:active`, `:visited`, `:focus` y `:hover`
// y el selector `.noHover`.
//
// Ej.
// a.verdeAgua,
// a.verdeAgua:active,
// a.verdeAgua:visited,
// a.verdeAgua.noHover:focus,
// a.verdeAgua.noHover:hover { color: #hex; }
// a.verdeAgua:focus,
// a.verdeAgua:hover { color: #hex; }
//
// Tambien puede generar selectores para `button` y `label`,
// sus pseudo-clases `:focus` y `:hover`
// y el selector `.noHover` para el elemento `button`.
// Se activa con `$button_coloured_act` y `$form_label_coloured_act`
//
// Ej.
// button.verdeAgua,
// button.verdeAgua.noHover:focus,
// button.verdeAgua.noHover:hover { color: #hex; }
// button.verdeAgua:focus,
// button.verdeAgua:hover { color: #hex; }
// label.verdeAgua,
// label.verdeAgua:focus,
// label.verdeAgua:hover { color: #hex; }
//
//
// 03 _ anchorColoursLightClassesGenerator
// 04 _ anchorColoursDarkClassesGenerator
// Por cada color genera selectores para anclas dentro de la clase.
//
// Ej.
// .verdeAgua a,
// .verdeAgua a:active,
// .verdeAgua a:visited { color: #hex; }
// .verdeAgua a:focus,
// .verdeAgua a:hover { color: #hex; }
//
//
// 05 _ backgroundColourClassesGenerator
// Por cada color genera una clase para usar como color de fondo.
//
// Ej.
// .bgVerdeAgua { background-color: #hex; }
//
//
// 06 _ backgroundColourHoverClassesGenerator
// Por cada color genera selectores para las pseudo-clases `:focus` y `:hover`
// de un ancla con clase del tipo `.bgColour`.
//
// Ej.
// a.bgVerdeAgua:hover,
// a.bgVerdeAgua:focus { background-color: #hex; }
//
// También puede generar selectores para las pseudo-clases `:focus` y `:hover`
// de los elementos `button`, `ìnput[type="submit"]` e `input[type="file"]` 
// con clase del tipo `.bgColour`.
// Se activa con `$button_coloured_act` y `$form_input_coloured_act`
//
// Ej.
// button.bgVerdeAgua:hover,
// button.bgVerdeAgua:focus { background-color: #hex; }
// input[type="submit"].bgVerdeAgua:hover,
// input[type="submit"].bgVerdeAgua:focus { background-color: #hex; }
// input[type="file"].bgVerdeAgua:hover,
// input[type="file"].bgVerdeAgua:focus { background-color: #hex; }



/* // Referencias globales de nombres de variables y mixins ----------------- */
///-- Inicio del nombre
// bd                   = borde
// bg                   = fondo / background
// bx                   = box
// ft                   = fuente
// mq, MQ               = media query @media
// tx                   = texto

///-- Fin del nombre
// _before              = se usa con pseudo-elementos ::before
// _after               = se usa con pseudo-elementos ::after
// _act                 = activacion
// _ani                 = animacion
// _hover               = se usa con pseudo-clases :focus y :hover
// _hs                  = hash
// _imp			= importacion
// _mx                  = mixin
// _var                 = variables

///-- Espaciado
// P, M                 = padding, margin
// T, R, B, L           = top, right, bottom, left
// H, V, A, X           = horizontal, vertical, all, custom defined

///-- Tamanos de Pantalla
// T                    = tablet
// B, A, O, L           = before, after, only, landscape

///-- Colores
// X, L, D              = extra, light, dark
// De, S, B             = desaturated, semi, bright

///-- Fuentes
// T, L, M, R, B, BK    = thin, light, medium, regular, bold, black
// X, S, U, C, I        = extra, semi, ultra, condensed, italic



@mixin colourLightClassesGenerator($colours_light_lightenValue){
    @each $colourLightClassesGeneratorMX_colourClassName, $colourLightClassesGeneratorMX_colourHexValue in $colours_light_map {
        .#{$colourLightClassesGeneratorMX_colourClassName}{
            &, b, strong, i, em{color: $colourLightClassesGeneratorMX_colourHexValue;}
        }
        a.#{$colourLightClassesGeneratorMX_colourClassName}{
            &, &:active, &:visited, 
            &.noHover:focus, &.noHover:hover{color: $colourLightClassesGeneratorMX_colourHexValue;}
            &:focus, &:focus-visible, &:hover{color: darken($colourLightClassesGeneratorMX_colourHexValue, $colours_light_lightenValue);}
        }
        @if $button_coloured_act == "on"{
            button.#{$colourLightClassesGeneratorMX_colourClassName}{
                &, &.noHover:focus, &.noHover:hover{color: $colourLightClassesGeneratorMX_colourHexValue;}
                &:focus, &:focus-visible, &:hover{color: darken($colourLightClassesGeneratorMX_colourHexValue, $colours_light_lightenValue);}
            }
        }
        @if $form_label_coloured_act == "on"{
            label.#{$colourLightClassesGeneratorMX_colourClassName}{
                &, &:focus, &:focus-visible, &:hover{color: $colourLightClassesGeneratorMX_colourHexValue;}
            }
        }
    }
}
@mixin colourDarkClassesGenerator($colours_dark_lightenValue){
    @each $colourDarkClassesGeneratorMX_colourClassName, $colourDarkClassesGeneratorMX_colourHexValue in $colours_dark_map {
        .#{$colourDarkClassesGeneratorMX_colourClassName}{
            &, b, strong, i, em{color: $colourDarkClassesGeneratorMX_colourHexValue;}
        }
        a.#{$colourDarkClassesGeneratorMX_colourClassName}{
            &, &:active, &:visited, 
            &.noHover:focus, &.noHover:hover{color: $colourDarkClassesGeneratorMX_colourHexValue;}
            &:focus, &:focus-visible, &:hover{color: lighten($colourDarkClassesGeneratorMX_colourHexValue, $colours_dark_lightenValue);}
        }
        @if $button_coloured_act == "on"{
            button.#{$colourDarkClassesGeneratorMX_colourClassName}{
                &, &.noHover:focus, &.noHover:hover{color: $colourDarkClassesGeneratorMX_colourHexValue;}
                &:focus, &:focus-visible, &:hover{color: lighten($colourDarkClassesGeneratorMX_colourHexValue, $colours_dark_lightenValue);}
            }
        }
        @if $form_label_coloured_act == "on"{
            label.#{$colourDarkClassesGeneratorMX_colourClassName}{
                &, &:focus, &:focus-visible, &:hover{color: $colourDarkClassesGeneratorMX_colourHexValue;}
            }
        }
    }
}
@mixin anchorColoursLightClassesGenerator($colours_anchor_ftColours_light_lightenValue){
    @each $anchorColoursLightClassesGeneratorMX_colourClassName, $anchorColoursLightClassesGeneratorMX_colourHexValue in $colours_anchor_ftColours_light_map {
        .#{$anchorColoursLightClassesGeneratorMX_colourClassName}{            
            a, a:active, a:visited{color: $anchorColoursLightClassesGeneratorMX_colourHexValue;}
            a:focus, a:hover{color: darken($anchorColoursLightClassesGeneratorMX_colourHexValue, $colours_anchor_ftColours_light_lightenValue);}
        }
    }
}
@mixin anchorColoursDarkClassesGenerator($colours_anchor_ftColours_dark_lightenValue){
    @each $anchorColoursDarkClassesGeneratorMX_colourClassName, $anchorColoursDarkClassesGeneratorMX_colourHexValue in $colours_anchor_ftColours_dark_map {
        .#{$anchorColoursDarkClassesGeneratorMX_colourClassName}{            
            a, a:active, a:visited{color: $anchorColoursDarkClassesGeneratorMX_colourHexValue;}
            a:focus, a:hover{color: lighten($anchorColoursDarkClassesGeneratorMX_colourHexValue, $colours_anchor_ftColours_dark_lightenValue);}
        }
    }
}
@mixin backgroundColourClassesGenerator{
    @each $backgroundColourClassesGeneratorMX_bgColourClassName, $backgroundColourClassesGeneratorMX_bgColourHexValue in $colours_backgrounds_map {
        .bg#{$backgroundColourClassesGeneratorMX_bgColourClassName}{background-color: $backgroundColourClassesGeneratorMX_bgColourHexValue;}
    }
}
@mixin backgroundColourHoverClassesGenerator{
    @each $backgroundColourHoverClassesGeneratorMX_bgColourClassName, $backgroundColourHoverClassesGeneratorMX_bgColourHoverValue in $colours_backgrounds_hover_map {
        a.#{$backgroundColourHoverClassesGeneratorMX_bgColourClassName}{
            &:hover, &:focus{background-color: $backgroundColourHoverClassesGeneratorMX_bgColourHoverValue;}
        }
        @if $button_coloured_act == "on"{
            button.#{$backgroundColourHoverClassesGeneratorMX_bgColourClassName}{
                &:hover, &:focus{background-color: $backgroundColourHoverClassesGeneratorMX_bgColourHoverValue;}
            }
        }
        @if $form_input_coloured_act == "on"{
            input[type="submit"].#{$backgroundColourHoverClassesGeneratorMX_bgColourClassName}{
                &:hover, &:focus{background-color: $backgroundColourHoverClassesGeneratorMX_bgColourHoverValue;}
            }
            input[type="file"].#{$backgroundColourHoverClassesGeneratorMX_bgColourClassName}{
                &:hover, &:focus{background-color: $backgroundColourHoverClassesGeneratorMX_bgColourHoverValue;}
            }
        }
    }
}